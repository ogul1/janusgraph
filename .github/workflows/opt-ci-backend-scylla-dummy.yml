# Copyright 2023 JanusGraph Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Modified CI Backend ScyllaDB
env:
  BUILD_MAVEN_OPTS: -DskipTests=true --batch-mode --also-make
  VERIFY_MAVEN_OPTS: -Pcoverage
jobs:
  build-all:
    runs-on: ubuntu-22.04
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-build-all.csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/janusgraph/janusgraph', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |-
          ${{ runner.os }}-maven-
    - run: touch optcd-4.txt
    - uses: actions/setup-java@v4
      with:
        java-version: 8
        distribution: zulu
    - run: touch optcd-5.txt
    - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true
        ${{ env.BUILD_MAVEN_OPTS }}
    - run: touch optcd-6.txt
    - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS
        }}
    - run: touch optcd-7.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-build-all
        path: /home/runner/inotifywait-log-build-all.csv
    name: build-all
  tests:
    runs-on: ubuntu-22.04
    needs: build-all
    strategy:
      fail-fast: false
      matrix:
        include:
        - module: scylla
          args: -Pscylla-murmur -Dtest="**/diskstorage/cql/*"
          name: murmur-diskstorage
          java: 8
        - module: scylla
          args: -Pscylla-murmur -Dtest="**/graphdb/cql/*"
          name: murmur-graphdb
          java: 8
        - module: scylla
          args: -Pscylla-murmur -Dtest="**/hadoop/*"
          name: murmur-hadoop
          java: 8
        - module: scylla
          args: -Pscylla-murmur -Dtest="**/core/cql/*"
          name: murmur-core
          java: 8
        - module: scylla
          args: -Pscylla-murmur-ssl -Dtest="**/diskstorage/cql/CQLStoreTest.java"
          name: murmur-ssl
          java: 8
        - module: scylla
          args: -Pscylla-murmur-client-auth -Dtest="**/diskstorage/cql/CQLStoreTest.java"
          name: murmur-client-auth
          java: 8
        - module: scylla
          args: -Pscylla-murmur -Dtest="**/diskstorage/cql/*"
          name: murmur-diskstorage
          install-args: -Pjava-11
          java: 11
        - module: scylla
          args: -Pscylla-murmur -Dtest="**/graphdb/cql/*"
          name: murmur-graphdb
          install-args: -Pjava-11
          java: 11
        - module: scylla
          args: -Pscylla-murmur -Dtest="**/hadoop/*"
          name: murmur-hadoop
          install-args: -Pjava-11
          java: 11
        - module: scylla
          args: -Pscylla-murmur -Dtest="**/core/cql/*"
          name: murmur-core
          install-args: -Pjava-11
          java: 11
        - module: scylla
          args: -Pscylla-murmur-ssl -Dtest="**/diskstorage/cql/CQLStoreTest.java"
          name: murmur-ssl
          install-args: -Pjava-11
          java: 11
        - module: scylla
          args: -Pscylla-murmur-client-auth -Dtest="**/diskstorage/cql/CQLStoreTest.java"
          name: murmur-client-auth
          install-args: -Pjava-11
          java: 11
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-tests ().csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/janusgraph/janusgraph', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - run: echo "No build required"
    - run: touch optcd-3.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-tests ()
        path: /home/runner/inotifywait-log-tests ().csv
    name: tests ()
'on':
- push
- workflow_dispatch
